<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="./styles.css" class="style" type="text/css">
  <link rel="stylesheet" href="./circle.scss" class="style" type="text/css">
  <link rel="stylesheet" href="./circle.css" class="style" type="text/css">
  <link 
    href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css" 
    rel="stylesheet"
    integrity="sha384-F3w7mX95PdgyTmZZMECAngseQB83DfGTowi0iMjiWaeVhAn4FJkqJByhZMI3AhiU" 
    crossorigin="anonymous">
  <script 
    src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ"
    crossorigin="anonymous"></script> 
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.esm.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.esm.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.js"></script> 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/helpers.esm.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/helpers.esm.min.js"></script> -->
    <script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/fusioncharts.js"></script>

    <script type="text/javascript" src="https://cdn.fusioncharts.com/fusioncharts/latest/themes/fusioncharts.theme.fusion.js"></script>
    <script type="text/javascript">
      //STEP 2 - Chart Data
      const chartData = [
        {
            // "label": "Food",
            "value": "28504"
        },
        {
            // "label": "Apparels",
            "value": "14633"
        },
        {
            // "label": "Electronics",
            "value": "10507"
        },
        {
            // "label": "Household",
            "value": "4910"
        }
    ];
  
      //STEP 3 - Chart Configurations
      const chartConfig = {
      type: 'doughnut2d',
      renderAt: 'chart-container',
      width: '300',
      height: '300',
      dataFormat: 'json',
      dataSource: {
          // Chart Configuration
          "chart": {
                // "caption": "Split of Revenue by Product Categories",
                // "subCaption": "Last year",
                "numberPrefix": "$",
                "defaultCenterLabel": "Total revenue: $64.08K",
                "centerLabel": "Revenue from $label: $value",
                "decimals": "0",
                "theme": "fusion",
                "doughnutRadius": "50"
              },
          // Chart Data
          "data": chartData
          }
      };
      FusionCharts.ready(function(){
      var fusioncharts = new FusionCharts(chartConfig);
      fusioncharts.render();
      });
  
  </script>
  
  
  <title>Document</title>
</head>
<body>
  <div class="container">
    <h1>UI for Docker (Remember to put all/active/stopped containers)</h1>    
    <div class="all-charts">
      <div class="single-chart">
        <canvas id="myChart" width="200" height="200"></canvas>
      </div>  
      <div id="chart-container">FusionCharts XT will load here!</div>
    </div>    
    <div class="second-line-container">
      <div class="thid-line-container">
        <div>
          <h3><a href="/dashboard">Dashboard</a></h3>
        </div>
        <div>          
          <h3><a href="/containers">Containers</a></h3>
        </div>
        <div>          
          <h3><a href="/images">Images</a></h3>          
        </div>
        <div>
          <h3><a href="/info">Info</a></h3>                    
        </div>
        <div>
          <button type="button" class="btn btn-primary">Refresh</button>
        </div>
      </div>

    </div>
    <h1>Containers: </h1>
    <div class="fourth-line-container">
      <select id="options">
        <option value="Actions" selected>Actions</option>
        <option value="start">Start</option>
        <option value="stop">Stop</option>
        <option value="remove">Remove</option>
      </select>
      <input type="text" placeholder="Filter">
    </div> 
    <table class="table">
      <thead>
        <tr>
          <% tableHead.forEach(head => { %>
            <th scope="col"><%= head %></th>
          <% }) %>  
        </tr>
      </thead>
      <tbody>        
        <% tableBody.forEach((body, index) => { %>
          <tr>
            <% body.forEach((item, index) => { %>
              <% if(index === 0) { %>
                <th scope="row"><%= item %></th>
              <% } else { %>
                <td><%= item%></td>
              <% } %>              
            <% }) %> 
            <% if(body.length === 0){ %>
              <% console.log('it is zero') %>
            <%} else { %>
              <td><button value="<%= body[0]%>" class="action-btn" id="btn_<%= index %>">Btn <%= body[6]%></button></td>
            <%}%>
          </tr>             
        <% }) %>           
      </tbody>
    </table>       
  </div>
  <script>    
    // var ctx = document.getElementById('myChart').getContext('2d');

    // var data = {
    //       datasets: [{
    //           data: [4, 5],
    //           backgroundColor: [
    //               'rgba(0, 0, 255, 1)',
    //               'rgba(0, 0, 255, 0.1)'               
    //           ],           
    //       }],
    //       labels: [
    //           'Active',
    //           'All'
    //       ]
    //     };
    // var stackedLine = new Chart(ctx, {
    //       type: 'doughnut',
    //       options: {
    //         cutout: 60,          
    //       },
    //       data: data         
    //     });
        

        

    const options = document.getElementById('options')
    const buttons = document.getElementsByClassName("action-btn")
    const dashboard = document.getElementById('dashboard')

    let action = null

    options.addEventListener('change', (e) => {
      console.log(e.target.value)
      action = e.target.value
    })
    
    for(let i = 0; i < buttons.length; i++){
      buttons[i].addEventListener('click', e => {

        if(!action || action === 'Actions'){
          alert('Must select an action')
          return
        }

        let containerName = e.target.value.trim()

        console.log('the button was clicked: ', e.target.value)  
        let endpoint = '/dashboard/execute/' + containerName
        
        fetch(
            endpoint, { 
            method: 'POST',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ action, name: containerName }) 
          })
          .then(res => console.log('this is res', res))
          .catch(error => console.log(error))       
      })
    }    
  </script>
</body>
</html>